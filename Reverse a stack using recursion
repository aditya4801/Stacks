class Solution{
public:
   void func(stack<int> &s,vector<int> &ans){
       if(s.empty()) return;
       int a=s.top();s.pop();
       ans.push_back(a);
       func(s,ans);
   }
   vector<int> Reverse(stack<int> St){
       vector<int> ans;
       func(St,ans);
       return ans;
   }
};

                OR(using insertatbottom approach)
                
                
void insertatbottom(stack<int>&s, int x)
{
   if(s.empty())
{
   s.push(x);
    return;
}
  int num=s.top();
     s.pop();

   insertatbottom(s,x);
    s.push(num);
  }

   void reversestack(stack<int>&s)
   {
     if(s.empty())
   {
     return;
   }

  int num=s.top();
      s.pop();
      
   reversestack(s);
   
   insertatbottom(s,x);
   
      s.push(num);
  }
